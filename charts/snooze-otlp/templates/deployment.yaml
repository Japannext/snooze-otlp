---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}"
  namespace: "{{ .Release.Namespace }}"
  labels:
    app.kubernetes.io/name: snooze-otlp
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/component: otlp-listener
    app.kubernetes.io/part-of: "{{ .Values.partOf }}"
spec:
  replicas: {{ .Values.replicas }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  selector:
    matchLabels:
      app.kubernetes.io/name: snooze-otlp
      app.kubernetes.io/instance: "{{ .Release.Name }}"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: snooze-otlp
        app.kubernetes.io/instance: "{{ .Release.Name }}"
        app.kubernetes.io/component: otlp-listener
        app.kubernetes.io/part-of: "{{ .Values.partOf }}"
      {{- if .Values.podAnnotations }}
      annotations: {{- toYaml .Values.podAnnotations | nindent 8 }}
      {{- end }}
    spec:
      containers:
      - name: snooze-otlp
        image: "{{ .Values.image.repo }}/{{ .Values.image.name }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: "{{ .Values.image.pullPolicy }}"
        ports:
        - name: otlp-grpc
          containerPort: {{ toYaml .Values.otlp.grpcPort }}
          protocol: TCP
        {{- if .Values.prometheus.enabled }}
        - name: metrics
          containerPort: {{ toYaml .Values.prometheus.port }}
          protocol: TCP
        {{- end }}
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities: {drop: ['ALL']}
          runAsNonRoot: true
          seccompProfile: {type: RuntimeDefault}
        env:
        - name: SNOOZE_OTLP_GRPC_LISTENING_PORT
          value: "{{ toYaml .Values.otlp.grpcPort }}"
        - name: SNOOZE_OTLP_SNOOZE_URL
          value: "{{ .Values.snooze.url }}"
        {{- if .Values.snooze.caConfigMap }}
        - name: SNOOZE_OTLP_SNOOZE_CA_PATH
          value: "/etc/ssl/certs/ca-certificates.crt"
        {{- end }}
        - name: SNOOZE_OTLP_LOG_LEVEL
          value: "{{ .Values.logLevel }}"
        {{- with .Values.prometheus }}
        - name: SNOOZE_OTLP_PROMETHEUS_ENABLE
          value: "{{ .enabled }}"
        - name: SNOOZE_OTLP_PROMETHEUS_PORT
          value: "{{ .port }}"
        {{- end }}
        {{- if .Values.snooze.caConfigMap }}
        volumeMounts:
        - name: cacert
          mountPath: "/etc/ssl/certs/ca-certificates.crt"
          subPath: ca.crt
        {{- end }}
        livenessProbe:
          grpc:
            port: {{ .Values.otlp.grpcPort }}
          initialDelaySeconds: 3
        readinessProbe:
          grpc:
            port: {{ .Values.otlp.grpcPort }}
          initialDelaySeconds: 3
      {{- if .Values.snooze.caConfigMap }}
      volumes:
      - name: cacert
        configMap:
          name: "{{- .Values.snooze.caConfigMap }}"
      {{- end }}
